pacman::p_load(data.table, ggplot2)
theme_set(theme_minimal())
deces <- fread("Data/deces_2018-2022.csv")[ADEC != 2022]
pacman::p_load(data.table, lubridate, magrittr, questionr, tidyverse, ggplot2)
# Empilement des bases
annees <- c(2018:2020, "20212022")
deces <- lapply(annees, function(an) fread(paste0("Data/2022-02-25_detail_2022/DC_", an, "_det.csv"))) %>%
rbindlist(fill =  T)
# Date de décès
deces[, date_dec := ymd(paste(ADEC, MDEC, JDEC, sep = "-"))]
# Date de naissance (janvier quand mois inconnu, 1er quand jour inconnu)
deces[, date_nais := ymd(paste(ANAIS,
fifelse(is.na(MNAIS) | MNAIS == 0, 1, MNAIS),
fifelse(is.na(JNAIS) | JNAIS == 0, 1, JNAIS),
sep = "-"))]
# Âge au moment du décès
deces[, age := interval(date_nais, date_dec) %/% years(1)]
# Dataframe ?volution de la mortalit? sur diff?rentes p?riode
evolution_mortalite <- data.frame(annee = c(2018, 2019, 2020), premier_conf_M = NA, deuxieme_conf_M = NA,
premier_conf_F = NA, deuxieme_conf_F = NA)
# Nombre de mort hommes entre 18 et 30 ans, en 2018, 2019 et 2020, entre les dates du premier confinnement,
# seulement le premier mois pour calculer un taux de mortalit? par mois comparable.
evolution_mortalite[1,"premier_conf_M"] <- count(deces[deces$date_dec >= "2018-03-17" & deces$date_dec <= "2018-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[2,"premier_conf_M"] <- count(deces[deces$date_dec >= "2019-03-17" & deces$date_dec <= "2019-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[3,"premier_conf_M"] <- count(deces[deces$date_dec >= "2020-03-17" & deces$date_dec <= "2020-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
# Deuxi?me confinement
evolution_mortalite[1,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2018-10-30" & deces$date_dec <= "2018-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[2,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2019-10-30" & deces$date_dec <= "2019-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[3,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2020-10-30" & deces$date_dec <= "2020-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
# Pour les femmes
# premier confinement
evolution_mortalite[1,"premier_conf_F"] <- count(deces[deces$date_dec >= "2018-03-17" & deces$date_dec <= "2018-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[2,"premier_conf_F"] <- count(deces[deces$date_dec >= "2019-03-17" & deces$date_dec <= "2019-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[3,"premier_conf_F"] <- count(deces[deces$date_dec >= "2020-03-17" & deces$date_dec <= "2020-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
# Deuxi?me confinement
evolution_mortalite[1,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2018-10-30" & deces$date_dec <= "2018-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[2,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2019-10-30" & deces$date_dec <= "2019-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[3,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2020-10-30" & deces$date_dec <= "2020-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite$population_M_18_30 <- NA
evolution_mortalite$population_F_18_30 <- NA
#population au premier janvier 2020
#Hommes  entre 18 et 30 =	4 822 540
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2020] <- 4822540
#Femmes entre 18 et 30 =	4 776 592
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2020] <- 4776592
#Population au premier janvier 2019
# Hommes 18 - 30 4 834 216
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2019] <- 4834216
# Femmes 18 - 30 4 796 563
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2019] <- 4796563
#Population au premier janvier 2018
#hommes 18 - 30 4 858 295
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2018] <- 4858295
#femmes 18 - 30	4 824 962
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2018] <- 4824962
#Taux de mortalit? pour 100 000 pour le mois du premier confinement chaque ann?es
#Homme
evolution_mortalite$taux_mortalite_premier_conf_M <- (evolution_mortalite$premier_conf_M/evolution_mortalite$population_M_18_30) * 100000
# Femme
evolution_mortalite$taux_mortalite_premier_conf_F <- (evolution_mortalite$premier_conf_F/evolution_mortalite$population_F_18_30) * 100000
#Taux de mortalit? pour 100 000 pour le mois du deuxieme confinement chaque ann?es
#Homme
evolution_mortalite$taux_mortalite_deuxieme_conf_M <- (evolution_mortalite$deuxieme_conf_M/evolution_mortalite$population_M_18_30) * 100000
# Femme
evolution_mortalite$taux_mortalite_deuxieme_conf_F <- (evolution_mortalite$deuxieme_conf_F/evolution_mortalite$population_F_18_30) * 100000
taux_plot <- ggplot(evolution_mortalite, aes(x = annee)) +
geom_line(aes(y = taux_mortalite_premier_conf_M), color = "blue") +
geom_line(aes(y = taux_mortalite_premier_conf_F), color = "red") +
geom_line(aes(y = taux_mortalite_deuxieme_conf_M), color = "blue", linetype = "dashed") +
geom_line(aes(y = taux_mortalite_deuxieme_conf_F), color = "red", linetype = "dashed") +
scale_x_continuous(breaks = c(2018, 2019, 2020))
taux_plot
deces <- lapply(annees, function(an) fread(paste0("Data/2022-02-25_detail_2022/DC_", an, "_det.csv"))) %>%
rbindlist(fill =  T)
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Ariane/ENS/2021_2022_QESS_M2/QESS_Identification_causale/Validation/confinement_surmortalite/Data")
deces <- lapply(annees, function(an) fread(paste0("Data/2022-02-25_detail_2022/DC_", an, "_det.csv"))) %>%
rbindlist(fill =  T)
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Ariane/ENS/2021_2022_QESS_M2/QESS_Identification_causale/Validation/confinement_surmortalite")
annees <- c(2018:2020, "20212022")
deces <- lapply(annees, function(an) fread(paste0("Data/2022-02-25_detail_2022/DC_", an, "_det.csv"))) %>%
rbindlist(fill =  T)
# Date de décès
deces[, date_dec := ymd(paste(ADEC, MDEC, JDEC, sep = "-"))]
deces[, date_nais := ymd(paste(ANAIS,
fifelse(is.na(MNAIS) | MNAIS == 0, 1, MNAIS),
fifelse(is.na(JNAIS) | JNAIS == 0, 1, JNAIS),
sep = "-"))]
# Âge au moment du décès
deces[, age := interval(date_nais, date_dec) %/% years(1)]
# Dataframe ?volution de la mortalit? sur diff?rentes p?riode
evolution_mortalite <- data.frame(annee = c(2018, 2019, 2020), premier_conf_M = NA, deuxieme_conf_M = NA,
premier_conf_F = NA, deuxieme_conf_F = NA)
# Nombre de mort hommes entre 18 et 30 ans, en 2018, 2019 et 2020, entre les dates du premier confinnement,
# seulement le premier mois pour calculer un taux de mortalit? par mois comparable.
evolution_mortalite[1,"premier_conf_M"] <- count(deces[deces$date_dec >= "2018-03-17" & deces$date_dec <= "2018-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[2,"premier_conf_M"] <- count(deces[deces$date_dec >= "2019-03-17" & deces$date_dec <= "2019-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[3,"premier_conf_M"] <- count(deces[deces$date_dec >= "2020-03-17" & deces$date_dec <= "2020-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
# Deuxi?me confinement
evolution_mortalite[1,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2018-10-30" & deces$date_dec <= "2018-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[2,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2019-10-30" & deces$date_dec <= "2019-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
evolution_mortalite[3,"deuxieme_conf_M"] <- count(deces[deces$date_dec >= "2020-10-30" & deces$date_dec <= "2020-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "M",])
# Pour les femmes
# premier confinement
evolution_mortalite[1,"premier_conf_F"] <- count(deces[deces$date_dec >= "2018-03-17" & deces$date_dec <= "2018-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[2,"premier_conf_F"] <- count(deces[deces$date_dec >= "2019-03-17" & deces$date_dec <= "2019-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[3,"premier_conf_F"] <- count(deces[deces$date_dec >= "2020-03-17" & deces$date_dec <= "2020-04-17"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
# Deuxi?me confinement
evolution_mortalite[1,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2018-10-30" & deces$date_dec <= "2018-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[2,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2019-10-30" & deces$date_dec <= "2019-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite[3,"deuxieme_conf_F"] <- count(deces[deces$date_dec >= "2020-10-30" & deces$date_dec <= "2020-11-30"
& deces$age >= 18 & deces$age <= 30 & deces$SEXE == "F",])
evolution_mortalite$population_M_18_30 <- NA
evolution_mortalite$population_F_18_30 <- NA
#population au premier janvier 2020
#Hommes  entre 18 et 30 =	4 822 540
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2020] <- 4822540
#Femmes entre 18 et 30 =	4 776 592
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2020] <- 4776592
#Population au premier janvier 2019
# Hommes 18 - 30 4 834 216
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2019] <- 4834216
# Femmes 18 - 30 4 796 563
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2019] <- 4796563
#Population au premier janvier 2018
#hommes 18 - 30 4 858 295
evolution_mortalite$population_M_18_30[evolution_mortalite$annee == 2018] <- 4858295
#femmes 18 - 30	4 824 962
evolution_mortalite$population_F_18_30[evolution_mortalite$annee == 2018] <- 4824962
#Taux de mortalit? pour 100 000 pour le mois du premier confinement chaque ann?es
#Homme
evolution_mortalite$taux_mortalite_premier_conf_M <- (evolution_mortalite$premier_conf_M/evolution_mortalite$population_M_18_30) * 100000
# Femme
evolution_mortalite$taux_mortalite_premier_conf_F <- (evolution_mortalite$premier_conf_F/evolution_mortalite$population_F_18_30) * 100000
#Taux de mortalit? pour 100 000 pour le mois du deuxieme confinement chaque ann?es
#Homme
evolution_mortalite$taux_mortalite_deuxieme_conf_M <- (evolution_mortalite$deuxieme_conf_M/evolution_mortalite$population_M_18_30) * 100000
# Femme
evolution_mortalite$taux_mortalite_deuxieme_conf_F <- (evolution_mortalite$deuxieme_conf_F/evolution_mortalite$population_F_18_30) * 100000
taux_plot <- ggplot(evolution_mortalite, aes(x = annee)) +
geom_line(aes(y = taux_mortalite_premier_conf_M), color = "blue") +
geom_line(aes(y = taux_mortalite_premier_conf_F), color = "red") +
geom_line(aes(y = taux_mortalite_deuxieme_conf_M), color = "blue", linetype = "dashed") +
geom_line(aes(y = taux_mortalite_deuxieme_conf_F), color = "red", linetype = "dashed") +
scale_x_continuous(breaks = c(2018, 2019, 2020))
taux_plot
# Exportation de la base complète
# fwrite(deces, "Data/deces_2018-2022.csv")
# Exportation de la base complète
fwrite(deces, "Data/deces_2018-2022.csv")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE,
fig.align = 'center', fig.height = 5, fig.width = 8)
pacman::p_load(data.table, magrittr, ggplot2, ggpubr, kableExtra)
theme_set(theme_minimal())
year_colours <- viridis::magma(2, begin = 0.3, end = 0.7)
# On conserve les 18-29 ans et on enlève le 29 février 2020
deces <- fread("../Data/deces_2018-2022.csv")[ADEC %in% 2018:2020 &
age >= 18 & age < 30 &
date_dec != "2020-02-29"]
deces[, md_dec := format(date_dec, "%m-%d")]
deces[, periode := fcase(md_dec >= "01-01" & md_dec <= "03-16", 1,
md_dec >= "03-17" & md_dec <= "05-11", 2,
md_dec >= "05-12" & md_dec <= "10-29", 3,
md_dec >= "10-30" & md_dec <= "12-16", 4,
md_dec >= "12-17" & md_dec <= "12-31", 5)]
labs_per <- c("1 jan - 16 mar", "17 mar - 11 mai", "12 mai - 29 oct",
"30 oct - 15 déc", "16 déc - 31 déc")
labs_per_long <- c("1 janvier - 16 mars", "17 mars - 11 mai", "12 mai - 29 octobre",
"30 octobre - 15 décembre", "16 décembre - 31 décembre")
# Nombre de décès par périodes et années
tab_dec <- deces[, .(ndec = .N), keyby = .(periode, ADEC)]
# Nombre de décès par périodes, années et sexe
tab_dec_sexe <- deces[, .(ndec = .N), keyby = .(periode, ADEC, SEXE)]
View(deces)
ggplot(data = deces) + geom_freqpoly(x = date_dec)
ggplot(data = deces) + geom_freqpoly(x = deces$date_dec)
deces$date_dec
ggplot(data = deces) +
geom_freqpoly(x = deces$date_dec)
ggplot(data = deces) +
geom_freqpoly(date_dec)
ggplot(data = deces, aes(x=date_dec)) +
geom_freqpoly()
View(tab_dec)
deces_2018 <- deces[ADEC == 2018]
ggplot(data = deces, aes(x=date_dec)) +
geom_freqpoly()
deces_2020 <- deces[ADEC == 2020]
ggplot(data = deces_2018, aes(x=date_dec)) +
geom_freqpoly()
freq(deces_2018$date_dec)
ggplot(data = deces, aes(x=date_dec)) +
geom_freqpoly()
ggplot() +
geom_freqpoly(data = deces_2018, aes(x=date_dec))  +
geom_freqpoly(data = deces_2019, aes(x=date_dec))  +
geom_freqpoly(data = deces_2020, aes(x=date_dec))
deces_2019 <- deces[ADEC == 2019]
deces_2020 <- deces[ADEC == 2020]
ggplot() +
geom_freqpoly(data = deces_2018, aes(x=date_dec))  +
geom_freqpoly(data = deces_2019, aes(x=date_dec))  +
geom_freqpoly(data = deces_2020, aes(x=date_dec))
ggplot() +
geom_freqpoly(data = deces, aes(x=md_dec, group = ADEC))
ggplot() +
geom_freqpoly(data = deces_2018, aes(x=md_dec))  +
geom_freqpoly(data = deces_2019, aes(x=md_dec))  +
geom_freqpoly(data = deces_2020, aes(x=md_dec))
str(md_dec)
str(deces$md_dec)
dm(deces$md_dec)
ggplot() +
geom_freqpoly(data = deces, aes(x=date_dec, group = ADEC))
str(deces$md_dec)
paste(deces$md_dec,"-2018")
deces$date_dc_graph <- dmy(paste0(deces$md_dec,"-2018"))
paste0(deces$md_dec,"-2018")
paste0(deces$md_dec,"-2018")[1]
dmy(paste0(deces$md_dec,"-2018")[1])
deces$date_dc_graph <- dmy(paste0(deces$md_dec,"-2018"))
deces$date_dc_graph
deces$date_dc_graph <- dmy(paste0(deces$md_dec,"-2020"))
paste0(deces$md_dec,"-2020")[979]
deces$date_dc_graph <- mdy(paste0(deces$md_dec,"-2020"))
ggplot() +
geom_freqpoly(data = deces, aes(x=date_dc_graph))
ggplot() +
geom_freqpoly(data = deces, aes(x=date_dc_graph, group = ADEC))
ggplot() +
geom_histogram(data = deces, aes(x=date_dc_graph, group = ADEC))
ggplot() +
geom_histogram(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)
ggplot() +
geom_freqpoly(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)   +
scale_x_date(limits = c("2020-01-01","2020-12-31"))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31")))
dc_day <- deces %>% group_by(ADEC) %>% freq(date_dc_graph)
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31")))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = ADEC),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31")))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31")))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(y = ymd("2020-03-17")) +
geom_vline(y = ymd("2020-05-11"))
ymd("2020-03-17")
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(y = ymd("2020-03-17")) +
geom_vline(y = ymd("2020-05-11"))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(x = ymd("2020-03-17")) +
geom_vline(x = ymd("2020-05-11"))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15")) +
facet_wrap(~ factor(SEXE))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1,
outline.type = "both")   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
# facet_wrap(~ factor(SEXE))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1,
outline.type = "full")   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
# facet_wrap(~ factor(SEXE))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),
binwidth = 1,
kernel = "gaussian")
View(deces)
View(tab_dec)
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),kernel = "cosine")   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),kernel = "cosine", bw = 7)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
# facet_wrap(~ factor(SEXE))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),kernel = "cosine", bw = 3)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
# facet_wrap(~ factor(SEXE))
ggplot() +
geom_density(data = deces, aes(x=date_dc_graph, group = ADEC, color = as.factor(ADEC)),kernel = "cosine", bw = 6)   +
scale_x_date(limits = c(ymd("2020-01-01"),ymd("2020-12-31"))) +
geom_vline(xintercept = ymd("2020-03-17")) +
geom_vline(xintercept = ymd("2020-05-11"))+
geom_vline(xintercept = ymd("2020-10-30")) +
geom_vline(xintercept = ymd("2020-12-15"))# +
# facet_wrap(~ factor(SEXE))
